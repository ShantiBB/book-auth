basePath: /
definitions:
  request.Login:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  request.Refresh:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  request.Register:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  request.UserCreate:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  request.UserUpdate:
    properties:
      email:
        type: string
      username:
        type: string
    required:
    - email
    - username
    type: object
  response.AccessToken:
    properties:
      access_token:
        type: string
    type: object
  response.Response:
    properties:
      error:
        type: string
      status:
        type: string
    type: object
  response.Tokens:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  response.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      role:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
  response.UserShort:
    properties:
      email:
        type: string
      id:
        type: integer
      role:
        type: string
      username:
        type: string
    type: object
host: localhost:8085
info:
  contact: {}
  description: This is the authentication API service.
  title: Auth API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticates user and returns auth token
      parameters:
      - description: Login credentials
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/request.Login'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Tokens'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Login user
      tags:
      - auth
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: Returns a new access token using refresh token
      parameters:
      - description: Refresh token request
        in: body
        name: token
        required: true
        schema:
          $ref: '#/definitions/request.Refresh'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.AccessToken'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Refresh access token
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Creates a new user account and returns auth token
      parameters:
      - description: Registration data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/request.Register'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Tokens'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Register new user
      tags:
      - auth
  /users:
    get:
      description: Get short users info
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/response.UserShort'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get all users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Register a new user and return basic info
      parameters:
      - description: New user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/request.UserCreate'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.UserShort'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      summary: Create new user
      tags:
      - users
  /users/{id}:
    delete:
      description: Deletes a user by their unique ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      summary: Delete user by ID
      tags:
      - users
    get:
      description: Get all user info by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.User'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get user by ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Updates        user data based on the provided ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User update request
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/request.UserUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.UserShort'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - BearerAuth: []
      summary: Update         user by ID
      tags:
      - users
schemes:
- http
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
